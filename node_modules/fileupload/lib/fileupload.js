var async = require('async')
    , path = require('path')
  , _ = require('lodash')

var filesuploaded = [];
var errs = [];

var temp = require('./modules/file');

function FileUploaded(name, path) {

    // Add object properties like this
    this.name = name;
    this.path = path;
}



module.exports.createFileUpload = function (options) {
   
    // If no adapter passed in, assume options is just an upload dir
   var uploadDelegate = options.adapter || temp(options)
  

   return _.extend(
     {

         middleware: function (req, res, next) {
           
             if (typeof req.files === 'undefined' || Object.keys(req.files).length === 0) {
                 return next()
             }

             function parseRequest(field, cb) {
             
                 var files = req.files[field]
                   , filesArray = []


                 if (!Array.isArray(files)) {
                     files = [files]
                 }

                 async.forEach(files, function (file, cb) {
                     filesArray = []
                 
                     if (typeof file.path === 'undefined' || file.size === 0)
                     {
                         return cb()
                     }

                     uploadDelegate.put(file, function (error, storedFile)
                     {
                         filesuploaded.push(new FileUploaded(storedFile.basename, storedFile.path));

                         filesArray.push(storedFile)
                         cb()
                     })

                 },

                 function () {
                     req.body[field] = filesArray
                     cb()
                 })
             }
          
             async.forEach(Object.keys(req.files), parseRequest, next)
              
         }
        
      }, uploadDelegate)

}


module.exports.filesuploaded = filesuploaded
module.exports.errs = errs;
